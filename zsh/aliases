#!/usr/bin/env bash

## aliases
alias lal="ls -Alh --color=auto"
alias c="clear && cd"
path() {
  echo "${PATH//:/\n}"
}

## jar debug string (jds)
DEBUG_STR='-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005'
alias jds="tee >(tr -d '\n' | pbcopy) <<< $DEBUG_STR"

## homebrew
alias bud="brew update && echo '\n' && brew outdated --greedy"
alias bug="brew upgrade --greedy"

## github copilot cli
alias ghcs="gh copilot suggest"
alias ghce="gh copilot explain"

## tms
alias tms-sessions-red="tms sessions | sed -E 's/([[:alnum:]]+)\*/\x1b[31m\1\x1b[0m/g'"

## git
unalias gcp &>/dev/null
# for copying newline separated lists into clipboard as space separated lists
# ex: `git diff --name-only | gcp`
gcp() {
  tee >(tr '\n' ' ' | pbcopy)
}

alias gsh='git show --first-parent'

# copy file paths of listed files in git show
gshc() {
  git show --first-parent --name-only --oneline $1 | awk 'NR>1' | gcp
}

alias gst='git-st'

# get relative paths of given file paths
git-reltocwd() {
  xargs -I {} grealpath -s --relative-to='.' "$(git rev-parse --show-toplevel)/{}"
}

# get path of current dir from git root (e.g., 'scripts-tools/nnn/')
git-path() {
  printf "%s/%s" "$(basename $(git rev-parse --show-toplevel))" "$(git rev-parse --show-prefix)"
}

jars() {
  git status --porcelain | awk -F '/' '{ print $2 }' | uniq
}

alias gr='cd "$(git rev-parse --show-toplevel)"'

alias gco='git checkout'
alias gcb='git checkout -b'
alias gd='git diff'

## raycast
alias confetti="open -g raycast://confetti"
alias raycast="open -a Raycast"

## docker
# enter container's shell
dsh() {
  docker exec -it "$1" /bin/bash
}

export COMPOSE_DIR=("$HOME/scripts-tools/media-server/compose.yml")
# update containers in compose file
dcupdate() {
  docker compose -f "${COMPOSE_DIR[@]}" pull "$1" && docker compose -f "${COMPOSE_DIR[@]}" up -d "$1"
}

alias dc='docker compose'

## ultx
is-active() {
  ultx is-active | awk '{if ($0 ~ /active/) {print "\033[0;32m" $0 "\033[0m"} else if ($0 ~ /failed/) {print "\033[0;31m" $0 "\033[0m"} else {print $0}}'
}

## lazygit
lg() {
  export LAZYGIT_NEW_DIR_FILE=~/.lazygit/newdir

  lazygit "$@"

  if [ -f $LAZYGIT_NEW_DIR_FILE ]; then
    cd "$(cat $LAZYGIT_NEW_DIR_FILE)"
    rm -f $LAZYGIT_NEW_DIR_FILE >/dev/null
  fi
}

## man
man() {
  tmux rename-window "man $*"
  command man "$@"
  tmux set-option -w automatic-rename on
}

## yazi
y() {
  local tmp
  tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
  yazi "$@" --cwd-file="$tmp"
  if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
    # shellcheck disable=SC2164
    builtin cd -- "$cwd"
  fi
  rm -f -- "$tmp"
}

### misc
# sends macos notification when run
completed() {
  if [[ -n $TMUX || $TMUX_ESC ]]; then
    printf "\033Ptmux;\033\033]9;Completed\007\033\\"
  else
    printf "\033]9;Completed\007"
  fi
}
